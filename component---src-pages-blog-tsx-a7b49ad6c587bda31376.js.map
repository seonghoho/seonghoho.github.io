{"version":3,"file":"component---src-pages-blog-tsx-a7b49ad6c587bda31376.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Main/ArticleDetail.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/ArticleList.tsx","webpack://gatsby-starter-default/./src/pages/blog.tsx","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nexport type CategoryListProps = {\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\ntype CategoryItemProps = {\n  active: boolean\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode\n  className?: string\n  to: string\n} & CategoryItemProps\n\n// 카테고리 컨테이너 div\nconst CategoryContainer = styled.div`\n  margin: 20px auto;\n  width: 1024px;\n\n  @media (max-width: 1050px) {\n    width: 100%;\n    padding: 0 20px;\n  }\n`\n\n// 카테고리 목록 감싼 div\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  @media (max-width: 800px) {\n  }\n`\n\n// 단일 카테고리 div\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 800px) {\n    font-size: 15px;\n  }\n`\n\n// 현재 선택된 카테고리 div\nconst CurrentCategory = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n`\n\n// 선택된 카테고리 이름 div\nconst SelectedCategory = styled.div`\n  display: flex;\n  margin: 20px 0;\n  font-size: 36px;\n  font-weight: 700;\n\n  @media (max-width: 800px) {\n  }\n`\n\n// 선택된 카테고리 갯수 div\nconst SelectedCategoryCount = styled.div`\n  margin: 10px;\n  font-weight: 500;\n  align-items: center;\n`\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  const selectedCategoryCount = categoryList[selectedCategory] || 0\n\n  return (\n    <CategoryContainer>\n      <CategoryListWrapper>\n        {/* 카테고리 목록 */}\n        {Object.entries(categoryList).map(([name]) => (\n          <CategoryItem\n            to={`/blog/?category=${name}`}\n            active={name === selectedCategory}\n            key={name}\n          >\n            {name}\n          </CategoryItem>\n        ))}\n      </CategoryListWrapper>\n      {/* 현재 카테고리 */}\n      <CurrentCategory>\n        <SelectedCategory>{selectedCategory}</SelectedCategory>\n        <SelectedCategoryCount>\n          {selectedCategoryCount}posts\n        </SelectedCategoryCount>\n      </CurrentCategory>\n    </CategoryContainer>\n  )\n}\n\nexport default CategoryList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { ArticleFrontmatterType } from '../../types/ArticleDetailType'\nimport { GatsbyImage, getImage, StaticImage } from 'gatsby-plugin-image'\n\ntype ArticleDetailProps = ArticleFrontmatterType & {\n  link: string\n}\n\nconst ArticleDetailContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`\n\nconst ArticleDetailWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 10px -5px;\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`\n\nconst ArticleDetail: FunctionComponent<ArticleDetailProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail,\n  link,\n}) {\n  const image = thumbnail?.childImageSharp\n    ? getImage(thumbnail.childImageSharp.gatsbyImageData)\n    : null\n\n  return (\n    <ArticleDetailWrapper to={link}>\n      {image ? (\n        <ThumbnailImage image={image} alt=\"Post Item Image\" />\n      ) : (\n        //   썸네일 첨부 안할 시 넣는 이미지\n        <StaticImage\n          src=\"../../../contents/SampleImg.jpg\"\n          alt=\"Sample Image\"\n          height={200}\n        />\n      )}\n      <ArticleDetailContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(item => (\n            <CategoryItem key={item}>{item}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </ArticleDetailContent>\n    </ArticleDetailWrapper>\n  )\n}\n\nexport default ArticleDetail\n","import { MutableRefObject, useEffect, useMemo, useRef, useState } from 'react'\nimport { ArticleListItemType } from '../types/ArticleDetailType'\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  articleList: ArticleListItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  articles: ArticleListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const articleListByCategory = useMemo<ArticleListItemType[]>(\n    () =>\n      articles.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: ArticleListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory, articles],\n  )\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= articleListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    articleList: articleListByCategory.slice(\n      0,\n      count * NUMBER_OF_ITEMS_PER_PAGE,\n    ),\n  }\n}\n\nexport default useInfiniteScroll\n","import React, { FunctionComponent, useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport ArticleDetail from './ArticleDetail'\nimport { ArticleListItemType } from '../../types/ArticleDetailType'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from '../../hooks/useInfiniteScroll'\n\ntype ArticleListProps = {\n  selectedCategory: string\n  articles: ArticleListItemType[]\n}\n\nconst ArticleListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 1024px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 1050px) {\n    width: 100%;\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ArticleList: FunctionComponent<ArticleListProps> = function ({\n  selectedCategory,\n  articles,\n}) {\n  const articleListData = useMemo(\n    () =>\n      articles.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: ArticleListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  const { containerRef, articleList }: useInfiniteScrollType =\n    useInfiniteScroll(selectedCategory, articleListData)\n  return (\n    <ArticleListWrapper ref={containerRef}>\n      {articleList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: ArticleListItemType) => (\n          <ArticleDetail {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </ArticleListWrapper>\n  )\n}\n\nexport default ArticleList\n","import React, { FC, useMemo } from 'react'\nimport CategoryList, {\n  CategoryListProps,\n} from '../components/Main/CategoryList'\nimport ArticleList from '../components/Main/ArticleList'\nimport { graphql } from 'gatsby'\nimport { ArticleListItemType } from '../types/ArticleDetailType'\nimport queryString, { ParsedQuery } from 'query-string'\nimport Template from '../components/Common/Template'\nimport NavBar from 'components/Common/NavBar'\n\ntype BlogPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: ArticleListItemType[]\n    }\n    file: {\n      // childImageSharp: {\n      //   gatsbyImageData: IGatsbyImageData\n      // }\n      publicURL: string\n    }\n  }\n}\n\nconst BlogPage: FC<BlogPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      // childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: ArticleListItemType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <div>\n      <NavBar />\n      <Template\n        title={title}\n        description={description}\n        url={siteUrl}\n        image={publicURL}\n      >\n        {/*<Introduction profileImage={gatsbyImageData} />*/}\n        <CategoryList\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        <ArticleList selectedCategory={selectedCategory} articles={edges} />\n      </Template>\n    </div>\n  )\n}\n\nexport default BlogPage\n\nexport const getArticleList = graphql`\n  query getArticleList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: {\n        fields: [frontmatter___date, frontmatter___title]\n        order: [DESC, ASC]\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      publicURL\n    }\n  }\n`\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","isArray","val","indexOf","CategoryContainer","_styled","target","name","styles","CategoryListWrapper","CategoryItem","_ref","active","props","___EmotionJSX","Link","_ref2","CurrentCategory","SelectedCategory","SelectedCategoryCount","_ref3","selectedCategory","categoryList","selectedCategoryCount","map","_ref4","to","ArticleDetailContent","ArticleDetailWrapper","Title","Date","Category","Summary","ThumbnailImage","GatsbyImage","title","date","categories","summary","thumbnail","link","image","childImageSharp","getImage","gatsbyImageData","alt","StaticImage","src","height","__imageData","require","item","articles","containerRef","useRef","observer","count","setCount","useState","articleListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","children","observe","articleList","ArticleListWrapper","articleListData","useInfiniteScroll","ref","id","fields","slug","ArticleDetail","_extends","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","queryString","category","reduce","list","forEach","undefined","All","NavBar","Template","url","CategoryList","ArticleList","strictUriEncode","decodeComponent","splitOnFirst","filterObject","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","keysSorter","sort","a","b","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","parserForArrayFormat","create","param","k","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","encoderForArrayFormat","objectCopy","x","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","exclude","exclusionFilter","string","separator","separatorIndex","str","charCodeAt","toString","toUpperCase"],"sourceRoot":""}