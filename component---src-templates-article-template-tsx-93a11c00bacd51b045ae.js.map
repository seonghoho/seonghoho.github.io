{"version":3,"file":"component---src-templates-article-template-tsx-93a11c00bacd51b045ae.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Article/ArticleHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Article/ArticleHead.tsx","webpack://gatsby-starter-default/./src/components/Article/ArticleContent.tsx","webpack://gatsby-starter-default/./src/components/Article/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/article_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\nexport type ArticleHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n}\n\nconst ArticleHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  height: 100%;\n  margin: 0 auto;\n  color: #333333;\n\n  border-bottom: solid 1px #d9d9d9;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding: 30px 20px;\n  }\n  @media (max-width: 500px) {\n    padding: 20px 20px;\n  }\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  height: auto;\n  margin: auto 0;\n  font-size: 36px;\n  font-weight: 600;\n\n  @media (max-width: 800px) {\n    font-size: 30px;\n    margin: 0 0 30px;\n  }\n  @media (max-width: 400px) {\n    font-size: 25px;\n  }\n`\n\nconst ArticleData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: auto 0;\n  font-size: 18px;\n  font-weight: 600;\n  height: auto;\n\n  @media (max-width: 800px) {\n    //flex-direction: column;\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 500;\n  }\n`\n\nconst ArticleHeadInfo: FunctionComponent<ArticleHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  return (\n    <ArticleHeadInfoWrapper>\n      <Title className=\"title\">{title}</Title>\n      <ArticleData>\n        <div>{categories.join(' / ')}</div>\n        <div>{date}</div>\n      </ArticleData>\n    </ArticleHeadInfoWrapper>\n  )\n}\n\nexport default ArticleHeadInfo\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport ArticleHeadInfo from './ArticleHeadInfo'\n\n// type GatsbyImgProps = {\n//   image: IGatsbyImageData\n//   alt: string\n//   className?: string\n// }\n\ntype ArticleHeadProps = {\n  title: string\n  date: string\n  categories: string[]\n  thumbnail: IGatsbyImageData\n}\n\nconst ArticleHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 200px;\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 800px) {\n    height: auto;\n    margin-top: 0;\n  }\n`\n\n// const BackgroundImage = styled((props: GatsbyImgProps) => (\n//   <GatsbyImage {...props} style={{ position: 'absolute' }} />\n// ))`\n//   z-index: -1;\n//   width: 100%;\n//   height: 400px;\n//   object-fit: cover;\n//   filter: brightness(0.25);\n//\n//   @media (max-width: 800px) {\n//     height: 300px;\n//   }\n// `\n\nconst ArticleHead: FunctionComponent<ArticleHeadProps> = function ({\n  title,\n  date,\n  categories,\n  // thumbnail,\n}) {\n  return (\n    <ArticleHeadWrapper>\n      {/*<BackgroundImage image={thumbnail} alt=\"thumbnail\" />*/}\n      <ArticleHeadInfo title={title} date={date} categories={categories} />\n    </ArticleHeadWrapper>\n  )\n}\n\nexport default ArticleHead\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ninterface ArticleContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 50px 0;\n  word-break: break-all;\n  color: #555555;\n\n  // Markdown Style\n  line-height: 2;\n  font-size: 16px;\n  font-weight: 500;\n\n  // Apply Padding Attribute to All Elements\n\n  p {\n    padding: 5px 0;\n  }\n\n  // Adjust Heading Element Style\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-weight: 700;\n    margin-bottom: 15px;\n    color: #555555;\n  }\n\n  * + h1,\n  * + h2 {\n    margin-top: 20px;\n  }\n\n  * + h3 {\n    margin-top: 10px;\n  }\n\n  * + h4 {\n    margin-top: 20px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 15px 0;\n  }\n\n  // Adjust Horizontal Rule style\n\n  hr {\n    border: 1px solid #d9d9d9;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // 이미지 스타일\n  figure {\n    margin: 0; /* 기본 마진 제거 */\n    padding: 0; /* 기본 패딩 제거 */\n    text-align: center; /* 이미지 및 캡션 중앙 정렬 */\n  }\n\n  img {\n    width: 80%;\n  }\n\n  figcaption {\n    margin-top: 5px; /* 이미지와 캡션 사이의 여백 */\n    font-size: 14px; /* 캡션 폰트 크기 */\n    color: #888888; /* 캡션 텍스트 색상 */\n  }\n\n  // 코드 블럭 스타일\n  pre[class*='language-'] {\n    margin: 5px 0 10px;\n    padding: 30px;\n    tab-size: 4;\n    font-family: 'Pretendard', 'Fira Code', 'Courier New', Courier, monospace;\n    font-size: 16px;\n    color: #333;\n    background-color: #f5f5f5;\n\n    border-radius: 5px; /* 코드 블럭 모서리 둥글게 */\n    overflow-x: auto; /* 코드 블럭 가로 스크롤 */\n\n    ::-webkit-scrollbar {\n      height: 8px; /* 스크롤바 높이 */\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(0, 0, 0, 0.2); /* 스크롤바 색상 */\n      border-radius: 4px; /* 스크롤바 모서리 둥글게 */\n    }\n  }\n\n  // 백틱으로 인라인 코드 스타일\n  code[class*='language-'] {\n    tab-size: 4;\n    font-family: 'Pretendard', 'Fira Code', 'Courier New', Courier, monospace;\n    font-size: 16px;\n    padding: 0.2rem 0.4rem 0.3rem;\n    margin: 0 0.2rem;\n    color: #333;\n    background-color: #f5f5f5;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 800px) {\n    width: 100%;\n    padding: 30px 25px;\n    line-height: 1.8;\n    font-size: 14px;\n\n    * + h1,\n    * + h2 {\n      margin-top: 10px;\n    }\n\n    * + h3 {\n      margin-top: 10px;\n    }\n\n    * + h4 {\n      margin-top: 5px;\n    }\n\n    hr + h1,\n    hr + h2,\n    hr + h3 {\n      margin-top: 0;\n    }\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    h4 {\n      font-size: 15px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 40px 0;\n    }\n\n    ol,\n    ul {\n      margin-left: 15px;\n      padding: 10px 0;\n    }\n\n    // 코드 블럭 스타일\n    pre[class*='language-'] {\n      margin: 5px 0 10px;\n      padding: 30px;\n      font-size: 14px;\n    }\n\n    // 백틱으로 인라인 코드 스타일\n    code[class*='language-'] {\n      font-size: 14px;\n      padding: 0.2rem 0.4rem 0.3rem;\n      margin: 0 0.2rem;\n    }\n  }\n\n  @media (max-width: 500px) {\n    width: 100%;\n    padding: 20px 20px;\n    line-height: 1.7;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    h4 {\n      font-size: 15px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 40px 0;\n    }\n\n    ol,\n    ul {\n      margin-left: 15px;\n      padding: 5px 0;\n    }\n\n    // 코드 블럭 스타일\n    pre[class*='language-'] {\n      margin: 5px 0 10px;\n      padding: 30px;\n      font-size: 14px;\n    }\n\n    // 백틱으로 인라인 코드 스타일\n    code[class*='language-'] {\n      font-size: 14px;\n      padding: 0.2rem 0.4rem 0.3rem;\n      margin: 0 0.2rem;\n    }\n  }\n`\n\nconst ArticleContent: FunctionComponent<ArticleContentProps> = function ({\n  html,\n}) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default ArticleContent\n","import React, { createRef, FunctionComponent, useEffect } from 'react'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'seonghoho/seonghoho.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { ArticlePageItemType } from '../types/ArticleDetailType'\nimport Template from '../components/Common/Template'\nimport ArticleHead from '../components/Article/ArticleHead'\nimport ArticleContent from 'components/Article/ArticleContent'\nimport CommentWidget from 'components/Article/CommentWidget'\nimport NavBar from 'components/Common/NavBar'\nimport styled from '@emotion/styled'\n// import styled from '@emotion/styled'\n\n// const ArticleBody = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   justify-content: space-between;\n//   /* align-items: center; */\n//   width: 1024px;\n//   margin: 0 auto;\n\n//   @media (max-width: 1050px) {\n//     justify-content: center;\n//     align-items: center;\n//   }\n\n//   @media (max-width: 768px) {\n//   }\n// `\n\n// const Category = styled.div`\n//   width: 100%;\n//   margin-top: 65px;\n//   border: 1px solid #333;\n\n//   @media (max-width: 1050px) {\n//     display: none;\n//   }\n// `\n\nconst BGDiv = styled.div`\n  background-color: #ffffff;\n  color: #333333;\n  border-radius: 20px;\n  width: 820px;\n  height: 100%;\n  margin: 40px auto;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    margin: 0 auto;\n  }\n`\n\ntype ArticleTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: ArticlePageItemType[] // 존재하지 않는 타입이므로 에러가 발생하지만 일단 작성해주세요\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nconst ArticleTemplate: FunctionComponent<ArticleTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: { title, summary, date, categories, thumbnail },\n    },\n  } = edges[0]\n\n  const gatsbyImageData = thumbnail?.childImageSharp?.gatsbyImageData\n  const publicURL = thumbnail?.publicURL\n\n  return (\n    <div>\n      <NavBar />\n      {/* <ArticleBody>\n        <Category>sadfsafs</Category> */}\n      <Template\n        title={title}\n        description={summary}\n        url={href}\n        image={publicURL}\n      >\n        <BGDiv>\n          <ArticleHead\n            title={title}\n            date={date}\n            categories={categories}\n            thumbnail={gatsbyImageData}\n          />\n          <ArticleContent html={html} />\n          <CommentWidget />\n        </BGDiv>\n      </Template>\n      {/* </ArticleBody> */}\n    </div>\n  )\n}\n\nexport default ArticleTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ArticleHeadInfoWrapper","_styled","target","name","styles","Title","ArticleData","_ref","title","date","categories","___EmotionJSX","className","join","ArticleHeadWrapper","ArticleHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","BGDiv","_thumbnail$childImage","data","allMarkdownRemark","edges","location","href","node","frontmatter","summary","thumbnail","gatsbyImageData","childImageSharp","publicURL","NavBar","Template","description","url","image","ArticleHead","ArticleContent","CommentWidget"],"sourceRoot":""}